{"version":3,"sources":["../../src/controllers/actors.controllers.js"],"names":["getAllActors","req","res","Actors","findAll","raw","result","status","json","satusCode","data","message","getActor","id","params","findOne","where","createActor","body","firstName","lastName","dob","biography","profilePhoto","create","updateActor","update","deleteActor","destroy"],"mappings":"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","sourcesContent":["import { Actors } from '../models/actor.model'\r\n\r\nexport const getAllActors = async (req, res) => {\r\n  const result = await Actors.findAll({ raw: true })\r\n  res.status(200).json({\r\n    satusCode: 200,\r\n    data: result,\r\n    message: 'List of Actors'\r\n  })\r\n}\r\n\r\nexport const getActor = async (req, res) => {\r\n  const { id } = req.params\r\n  const result = await Actors.findOne({ where: { id }, raw: true })\r\n  res.status(200).json({\r\n    satusCode: 200,\r\n    data: result,\r\n    message: 'Show Actor'\r\n  })\r\n}\r\n\r\nexport const createActor = async (req, res) => {\r\n  const { firstName, lastName, dob, biography, profilePhoto } = req.body\r\n  await Actors.create({ firstName, lastName, dob, biography, profilePhoto })\r\n  res.status(200).json({\r\n    satusCode: 200,\r\n    message: 'Actor Created'\r\n  })\r\n}\r\n\r\nexport const updateActor = async (req, res) => {\r\n  const { id } = req.params\r\n  const { firstName, lastName, dob, biography, profilePhoto } = req.body\r\n  await Actors.update({ firstName, lastName, dob, biography, profilePhoto }, { where: { id } })\r\n  res.status(200).json({\r\n    satusCode: 200,\r\n    message: 'Actor Updated'\r\n  })\r\n}\r\n\r\nexport const deleteActor = async (req, res) => {\r\n  const { id } = req.params\r\n  await Actors.destroy({ where: { id } })\r\n  res.status(200).json({\r\n    satusCode: 200,\r\n    message: 'Actor Deleted'\r\n  })\r\n}\r\n"],"file":"actors.controllers.js"}