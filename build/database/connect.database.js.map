{"version":3,"sources":["../../src/database/connect.database.js"],"names":["sequelize","Sequelize","NAME_DB","USER_DB","PASS_DB","host","HOST_DB","dialect","connect","authenticate","console","log","error"],"mappings":";;;;;;;AAAA;;AACA;;;;;;AAEO,IAAMA,SAAS,GAAG,IAAIC,oBAAJ,CACvBC,YADuB,EACdC,YADc,EACLC,YADK,EAEvB;AACEC,EAAAA,IAAI,EAAEC,YADR;AAEEC,EAAAA,OAAO,EAAE;AAFX,CAFuB,CAAlB;;;AAOA,IAAMC,OAAO;AAAA,qEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEbR,SAAS,CAACS,YAAV,EAFa;;AAAA;AAGnBC,YAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ;AAHmB;AAAA;;AAAA;AAAA;AAAA;AAKnBD,YAAAA,OAAO,CAACE,KAAR,CAAc,oCAAd;;AALmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPJ,OAAO;AAAA;AAAA;AAAA,GAAb","sourcesContent":["import { Sequelize } from 'sequelize'\r\nimport { HOST_DB, NAME_DB, PASS_DB, USER_DB } from '../config/env.config'\r\n\r\nexport const sequelize = new Sequelize(\r\n  NAME_DB, USER_DB, PASS_DB,\r\n  {\r\n    host: HOST_DB,\r\n    dialect: 'postgres'\r\n  })\r\n\r\nexport const connect = async () => {\r\n  try {\r\n    await sequelize.authenticate()\r\n    console.log('Connection has been established successfully.')\r\n  } catch (error) {\r\n    console.error('Unable to connect to the database:', error)\r\n  }\r\n}\r\n"],"file":"connect.database.js"}